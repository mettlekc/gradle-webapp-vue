plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.moowork.node' version '1.3.1'
    id 'java'
}

group 'com.cheol.sample'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

node {
    version = '14.15.1'
    npmVersion = '6.14.8'
    workDir = file('./src/main/frontend')
    npmWorkDir = file('./src/main/frontend')
    nodeModulesDir = file('./src/main/frontend')
}

dependencies {
    compile("org.slf4j:slf4j-api:1.7.25")
    compile('ch.qos.logback:logback-classic:1.2.3')
    
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.9'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok'
   
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "src/main/resources-${profile}"
        }
    }
}

task setUp(type: NpmTask) {
    description = "Install Node.js packages"
    args = ['install']
    inputs.files file('package.json')
    outputs.files file('node_modules')
}

task buildFrontEnd(type: NpmTask, dependsOn: setUp) {
    description = "Build vue.js"
    args = ['run', 'build']
}

processResources.dependsOn 'buildFrontEnd'
